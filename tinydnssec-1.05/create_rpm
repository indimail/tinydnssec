#!/bin/sh
version=$(cat conf-version)

if [ -f /etc/debian_version ] ; then
	echo "you can't do rpmbuild on an insane system" 1>&2
	exit 1
fi

verbose=0
while test $# -gt 0; do
    case "$1" in
    -*=*) optarg=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'`
	;;
    *) optarg=
	;;
    esac

    case "$1" in
    --verbose)
	verbose=1
    ;;
    --release=*)
	release=$optarg
    ;;
    *)
    echo "invalid option [$1]"
    read key
    usage 1
    ;;
    esac

    shift
done
if test -f $HOME/.rpmmacros
then
	topdir=`grep ^%_topdir $HOME/.rpmmacros | awk '{print $2}'`
	if test -n "$topdir"
	then
		rpmbuild=$topdir
	else
		rpmbuild=$HOME/rpmbuild
	fi
else
	rpmbuild=$HOME/rpmbuild
fi

cd ..
if [ -d stage ] ; then
	/bin/rm -rf stage
fi
mkdir stage
if [ $? -ne 0 ] ; then
	exit 1
fi
cp -rp tinydnssec-$version stage
if [ $? -ne 0 ] ; then
	exit 1
fi
cd stage/tinydnssec-$version
if [ $? -ne 0 ] ; then
	exit 1
fi
make -s clean
make -s distclean
cd ..
tar \
	--exclude="tinydnssec-$version/.git" \
	--exclude="tinydnssec-$version/debian" \
	--exclude="tinydnssec-$version/RCS" \
	-cf - tinydnssec-"$version" \
			| gzip -c > $rpmbuild/SOURCES/tinydnssec-"$version".tar.gz
cd ..
dist=`uname -r |cut -d . -f4`
if [ -z "$release" ] ; then
	if [ -f /usr/bin/tinydns ] ; then
		tdist=$(rpm -qf /usr/bin/tinydns|cut -d- -f3|cut -d. -f3)
		if [ " $dist" = " $tdist" ] ; then
			tversion=$(rpm -qf /usr/bin/tinydns|cut -d- -f2)
			if [ "$tversion" = "$version" ] ; then
				release=$(rpm -qf /usr/bin/tinydns | cut -d- -f3 | cut -d. -f2)
				release=$(expr $release + 1)
			else
				release=1
			fi
		else
			release=1
		fi
	else
		release=1
	fi
fi
echo -n "Build RPM for tinydnssec-"$version"-1."$release" (Y/N) - "
read key
if [ " $key" = " Y" -o " $key" = " y" ] ; then
	cp stage/tinydnssec-$version/tinydnssec.spec /tmp
	/bin/rm -rf stage
	tmprel=`cat tinydnssec-$version/conf-release 2>/dev/null`
	if [ ! " $tmprel" = " 1.$release" ] ; then
		echo 1.$release > tinydnssec-$version/conf-release
		cd tinydnssec-$version
		make tinydnssec.spec
		cp tinydnssec.spec /tmp
		cd debian
		make
	fi
	if [ $verbose -eq 0 ] ; then
		echo "rpmbuild -ba --clean --quiet /tmp/tinydnssec.spec"
		rpmbuild -ba --clean --quiet /tmp/tinydnssec.spec
	else
		echo "rpmbuild -ba --clean /tmp/tinydnssec.spec"
		rpmbuild -ba --clean /tmp/tinydnssec.spec
	fi
	if [ $? -eq 0 ] ; then
		/bin/rm -f /tmp/tinydnssec.spec
		build_arch=`rpmbuild --showrc|grep "^build arch" | awk '{print $4}'`
		rpm --addsign $rpmbuild/RPMS/$build_arch/tinydnssec-"$version"-"1.$release".$dist.$build_arch.rpm
		rpm --addsign $rpmbuild/SRPMS/tinydnssec-"$version"-"1.$release".$dist.src.rpm
		echo -n "RPM lint for tinydnssec-"$version"-1."$release" (Y/N) - "
		read key
		if [ " $key" = " Y" -o " $key" = " y" ] ; then
			(
			echo tinydnssec-"$version"-"1.$release".$dist.$build_arch
			rpmlint $rpmbuild/RPMS/$build_arch/tinydnssec-"$version"-"1.$release".$dist.$build_arch.rpm
			echo ------------------------
			echo tinydnssec-"$version"-"1.$release".$dist.src.rpm
			rpmlint $rpmbuild/SRPMS/tinydnssec-"$version"-"1.$release".$dist.src.rpm
			echo ------------------------
			) 2>&1 | less
		fi
	else
		/bin/rm -f /tmp/tinydnssec.spec
	fi
else
	/bin/rm -rf stage
fi
echo -n "Remove Source (Y/N) - "
read key
if [ " $key" = " Y" -o " $key" = " y" ] ; then
	/bin/rm -f $rpmbuild/SOURCES/tinydnssec-"$version".tar.gz
fi


